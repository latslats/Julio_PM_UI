services:
  taskflow-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Pass build arguments for configuration if needed
        VITE_API_URL: http://localhost:5001/api
    ports:
      - "80:80"
    restart: unless-stopped
    container_name: taskflow-frontend
    depends_on:
      taskflow-backend:
        condition: service_healthy
    networks:
      - taskflow-network

  postgres:
    image: postgres:16-alpine
    container_name: taskflow-postgres
    environment:
      POSTGRES_DB: taskflow_db
      POSTGRES_USER: taskflow_user
      POSTGRES_PASSWORD: taskflow_password # Use a more secure password in production
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose port for direct access if needed
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskflow_user -d taskflow_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskflow-network

  redis:
    image: redis:7-alpine
    container_name: taskflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - taskflow-network

  taskflow-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app # Mount host code for development (hot-reloading)
      - /app/node_modules # Exclude host node_modules, use container's
    working_dir: /app
    command: npm start
    restart: unless-stopped
    container_name: taskflow-backend
    environment:
      DATABASE_URL: postgresql://taskflow_user:taskflow_password@postgres:5432/taskflow_db
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
      PORT: 5001
      # Settings for auto-pause functionality
      AUTO_PAUSE_CHECK_INTERVAL: "* * * * *" # Run every minute (cron syntax)
      TIMEZONE: "America/New_York" # Set your local timezone for auto-pause
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5001/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - taskflow-network

volumes:
  postgres_data:
    name: taskflow-postgres-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/Desktop/Dockers/taskflow_data/
  redis_data:
    name: taskflow-redis-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/Desktop/Dockers/taskflow_redis_data/

networks:
  taskflow-network:
    driver: bridge
